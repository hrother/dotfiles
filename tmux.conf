# source powerline
source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf
set -g status-right '#(.vim/bundle/powerline/scripts/powerline tmux right)'

# set mouse control
set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on
set -g mouse-resize-pane on

# use vim key bindings!
unbind [
bind Escape copy-mode
set-window-option -g mode-keys vi
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
unbind p
bind p paste-buffer
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

bind-key C-b last-window

# window resize
set-window-option -g aggressive-resize on

# look good
set -g default-terminal "screen-256color"

# make delay minimal
set -sg escape-time 0

# shortcut for reloading config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# better pane splitting
bind | split-window -h
bind - split-window -v

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
