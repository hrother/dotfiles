###
# ~/.mutt/muttrc
# Mutt configuration, based on:
# http://stevelosh.com/blog/2012/10/the-homely-mutt/
# http://www.proteansec.com/linux/the-ultimate-guide-to-mutt/
# http://blog.developwithpassion.com/2013/05/02/getting-up-and-running-with-a-sane-mutt-setup/
# http://jason.the-graham.com/2011/01/10/email_with_mutt_offlineimap_imapfilter_msmtp_archivemail/
###

# directories and commands
set alias_file       = ~/.mutt/aliases       # alias file
set header_cache     = ~/.mutt/cache/headers # where to store headers
set message_cachedir = ~/.mutt/cache/bodies  # where to store bodies
set certificate_file = ~/.mutt/certificates  # where to store certs
set mailcap_path     = ~/.mutt/mailcap       # entrys for filetypes
set signature        = ~/.mutt/sig           # my signature file
set tmpdir           = ~/.mutt/temp          # where to keep temp files
set editor           = "/usr/bin/vim +/^$"   # use vim and skip to first blank line

# main options
set mbox_type       = Maildir         # mailbox type
set folder          = ~/Mail          # mailbox location
set spoolfile       = "+rbg/INBOX"    # University is default inbox
set timeout         = 3               # idle time before scanning
set mail_check      = 0               # minimum time between scans
set sort_alias      = alias           # sort alias file by alias
set reverse_alias                     # show names from alias file in index
unset move                            # gmail does that
set delete                            # don't ask, just do
unset confirmappend                   # don't ask, just do!
set quit                              # don't ask, just do!!
unset mark_old                        # read/new is good enough for me
set beep_new                          # bell on new mails
set pipe_decode                       # strip headers and eval mimes when piping
set thorough_search                   # strip headers and eval mimes before searching

# Status Bar
set status_chars  = " *%A"
set status_format = "───[ Folder: %f ]───[%r%m messages%?n? (%n new)?%?d? (%d to delete)?%?t? (%t tagged)? ]───%>─%?p?( %p postponed )?───"

# index options
set sort              = threads                     # like gmail
set sort_aux          = reverse-last-date-received  # like gmail
set uncollapse_jump                                 # don't collapse on an unread message 
set sort_re                                         # thread based on regex
set reply_regexp      = "^(([Rr][Ee]?(\[[0-9]+\])?: *)?(\[[^]]+\] *)?)*"

# pager options
set pager_index_lines = 10  # number of index lines to show
set pager_context     = 5   # number of context lines to show
set pager_stop              # don't go to next message automatically
set menu_scroll             # scroll in menus
set smart_wrap              # don't split words
set tilde                   # show tildes like in vim
unset markers               # no ugly plus signs
auto_view text/html         # view html automatically
alternative_order text/plain text/enriched text/html
set quote_regexp = "^( {0,4}[>|:#%]| {0,4}[a-z0-9]+[>|]+)+"

# formats
set date_format     = "%m/%d/%y at %I:%M%P"
set index_format    = "%3C [%Z] %D %-15.15F %s"
set alias_format    = "%4n %t %-20a  %r"

# composing mail
set realname        = "Holger Rother"    # who am i?
set envelope_from                        # which from?
set sig_dashes                           # dashes before my sig... sweet
set edit_headers                         # show headers when composing
set fast_reply                           # skip to compose when replying
set sendmail_wait   = -1                 # don't wait for sending... to complete
set askcc                                # ask for CC:
set fcc_attach                           # save attachments with the body
unset mime_forward                       # forward attachments as part of body
set forward_format  = "Fwd: %s"          # format for subject when forwarding
set forward_decode                       # decode when forwarding
set attribution     = "On %d, %n wrote:" # set the attribution
set reply_to                             # reply to Reply to: field
set reverse_name                         # reply as whomever it was to
set include                              # include message in replies
set forward_quote                        # include message in forwards

# headers to show
ignore *                                 # ignore all headers
unignore from: to: cc: date: subject:    # show only these
hdr_order from: to: cc: date: subject:   # and in this order

mailboxes +rbg/INBOX +rbg/Sent +rbg/Drafts


# always sourced
source $alias_file             # required for functionality
source ~/.mutt/colors.muttrc   # source colors file
source ~/.mutt/sidebar.muttrc  # any muttng options are here
source ~/.mutt/rbg.muttrc    # source rbg as default

# account specific sources
folder-hook gmail/* source ~/.mutt/gmail.muttrc
folder-hook jfranken/*   source ~/.mutt/jfranken.muttrc
folder-hook rbg/*   source ~/.mutt/rbg.muttrc
folder-hook registration/*   source ~/.mutt/registration.muttrc
folder-hook hrother/*   source ~/.mutt/hrother.muttrc

# these just give me headaches
bind index,pager \#    noop
bind index i           noop

# bindings
bind pager i           exit
bind pager /           search
bind pager <up>        previous-line
bind pager <down>      next-line
bind pager k           previous-line
bind pager j           next-line
bind pager gg          top
bind pager G           bottom
bind index gg          first-entry
bind index G           last-entry
bind pager K           previous-undeleted
bind pager J           next-undeleted
bind index K           previous-unread
bind index J           next-unread
bind index,pager R     group-reply

# macros
macro index \Cr "<tag-prefix><clear-flag>N" "mark tagged messages as read"
macro index B   "<limit>~b "                "search message bodies"
macro index I   "<change-folder>!<enter>"   "go to Inbox"

# save a decoded copy in ~
macro index P   "<pipe-message>cat > ~/"    "save message as"

macro index $ "<imap-fetch-mail><sync-mailbox>"

# quick-sync ~/Mail immediately with offlineimap
macro index O "<shell-escape>/usr/local/bin/offlineimap -o <enter>" "sync all"
macro index o "<shell-escape>/usr/local/bin/offlineimap -oq -f INBOX<enter>" "quick sync all"

# Switch accounts
macro index ,g "<change-folder>+gmail/INBOX<return>" "change accounts"
macro index ,u "<change-folder>+rbg/INBOX<return>" "change accounts"
macro index ,h "<change-folder>+hrother/INBOX<return>" "change accounts"
macro index ,r "<change-folder>+registration/INBOX<return>" "change accounts"
macro index ,j "<change-folder>+jfranken/INBOX<return>" "change accounts"


#####################################################################
# gpg konfiguration
set pgp_autosign # if this variables is set, Mutt will ask to sign all the outbound messages.
unset pgp_autoencrypt # if this variable is set, Mutt will ask to encrypt all the outbound messages.
set pgp_replysign # when you answer a signed message, the response message will be signed too.
set pgp_replyencrypt # when you answer an encrypted message, the response message will be encrypted too.
set pgp_verify_sig=yes # Do you want to automatically verify incoming signed messages?  Of course!
set pgp_timeout=600 # delete pass phrase from the memory cache <n> seconds after typing it.
set pgp_create_traditional=no # This option controls whether Mutt generates old-style PGP encrypted or signed messages under certain circumstances.
# set pgp_outlook_compat=yes # If pgp_create_traditional is defined above, this option causes mutt to generate messages readable by users of MS Outlook using PGP.
# set pgp_sign_as="0xABC123D4" # what key do you want to use to sign outgoing messages? Note: it is posible to set it to the user id, but this can be confuse if you have the same user id with different keys.

set pgp_decode_command="gpg --status-fd=2 --no-secmem-warning %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
set pgp_verify_command="gpg --status-fd=2 --no-secmem-warning --no-verbose --batch --output - --verify %s %f"
set pgp_decrypt_command="gpg --status-fd=2 --no-secmem-warning --passphrase-fd 0 --no-verbose --batch --output - %f"
set pgp_sign_command="gpg --no-secmem-warning --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-secmem-warning --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="/usr/lib/mutt/pgpewrap gpg --no-secmem-warning -v --batch --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap gpg --no-secmem-warning --passphrase-fd 0 -v --batch --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
set pgp_import_command="gpg --no-secmem-warning --no-verbose --import -v %f"
set pgp_export_command="gpg --no-secmem-warning --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --no-secmem-warning --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="gpg --no-secmem-warning --no-verbose --batch --with-colons --list-keys %r"
set pgp_list_secring_command="gpg --no-secmem-warning --no-verbose --batch --with-colons --list-secret-keys %r"
set pgp_getkeys_command="gpg --recv-keys %r 2>/dev/null"
set pgp_good_sign="^gpg: Good signature from"

macro index \Cv "\eP<enter-command>set pgp_verify_sig=yes<enter><display-message><enter-command>set pgp_verify_sig=no<enter>" "Verify PGP signature"
macro pager \Cv "i\eP<enter-command>set pgp_verify_sig=yes<enter><display-message><enter-command>set pgp_verify_sig=no<enter>" "Verify PGP signature"

#######################################################################


# vim: set foldmethod=marker:
